find.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(devtools)
find_rtools()
install.packages(“RMySQL”)
install.packages("RMySQL")
libraryRMySQL)
library(RMySQL)
ucscDB <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb,"show databases;");dbDisconnect(ucscDB)
result <- dbGetQuery(ucscDB,"show databases;");dbDisconnect(ucscDB)
result
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-myqsql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables0
)
length(allTables)
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19,"affyU133Plus2")
head(affyData)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
con = url("https://scholar.google.com/citations?user=HI-I6C0AAAAJ")
htmlCode=readLines(con)
htmlCode
close(con)
library(XML)
html <- htmlTreeParse(url,useInternalNodes=T)
html <- htmlTreeParse(url,useInternalNodes=T)
rl <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"html <- htmlTreeParse(url, useInternalNodes = TRUE)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
library(httr)
html2=GET(url)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "57d2c4c85985ba7e2c6f",
secret = "39eaba287ef31e102b3bdd2019e4777355bd0f29")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "57d2c4c85985ba7e2c6f",
secret = "39eaba287ef31e102b3bdd2019e4777355bd0f29")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.package("httpuv")
package.install("httpuv")
install.packages("httpuv")
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "57d2c4c85985ba7e2c6f",
secret = "39eaba287ef31e102b3bdd2019e4777355bd0f29")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
# OR:
#req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
#stop_for_status(req)
#content(req)
content(req)
GET /repos/:created_at
GET /repos/created_at
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
list(output[[1]]$name, output[[1]]$created_at)
output
list(output[[2]]$name, output[[2]]$created_at)
list(output[[3]]$name, output[[3]]$created_at)
list(output[[4]]$name, output[[4]]$created_at)
list(output[[5]]$name, output[[5]]$created_at)
list(output[[6]]$name, output[[6]]$created_at)
list(output[[7]]$name, output[[7]]$created_at)
list(output[[8]]$name, output[[8]]$created_at)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query2 <- sqldf("select pwgtp1 from acs")  ## NO
query3 <- sqldf("select * from acs where AGEP < 50 and pwgtp1")  ## NO
query4 <- sqldf("select * from acs where AGEP < 50")  ## NO
identical(query3, query4)
library(sqldf)
install.packages("sqldf")
library(sqldf)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query2 <- sqldf("select pwgtp1 from acs")  ## NO
query3 <- sqldf("select * from acs where AGEP < 50 and pwgtp1")  ## NO
query4 <- sqldf("select * from acs where AGEP < 50")  ## NO
identical(query3, query4)
gold <- unique(acs$AGEP)
query1 <- sqldf("select distinct AGEP from acs")
query2 <- sqldf("select AGEP where unique from acs")
query3 <- sqldf("select unique * from acs")
query4 <- sqldf("select unique AGEP from acs")
identical(gold, query1)
identical(gold, query2)
identical(gold, query3)
identical(gold, query4)query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
require(httr)
require(XML)
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
xpathSApply(htmlParsed, "//title", xmlValue)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
r<- content(req)
for(i in 1:30){
print(r[[i]]$name, r[[i]]$created_at)
}
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "57d2c4c85985ba7e2c6f",
secret = "39eaba287ef31e102b3bdd2019e4777355bd0f29")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
r<- content(req)
for(i in 1:30){
print(r[[i]]$name, r[[i]]$created_at)
}
r<- content(req)
for(i in 1:30){
print(r[[i]]$name)
print( r[[i]]$created_at)
}
match(r,"datasharing")
match(r$name,"datasharing")
match(r$name,"datasharing")
q()
setwd("C:/Coursera/ExplorAnalysis/ExData_Plotting1")
data<- read.table("./household_power_consumption.txt", na.strings="?", sep=";", header = T)
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
data$Time <- strptime(data$Time, format = "%H:%M:%S")
data <- na.omit(data)
data <- data[data$Date == as.Date("01/02/2007", format = "%d/%m/%Y") | data$Date == as.Date("02/02/2007", format = "%d/%m/%Y"),]
plot(data$Global_active_power, xaxt = "n" , col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
plot(data$Global_active_power,type="l", xaxt = "n" , col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
plot(data$Global_active_power,type="l", xaxt = "n" , xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Global_active_power,type="l", xaxt = "n" , xlab = "", main = "Global Active Power")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Global_active_power,type="l", xaxt = "n" , xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Global_active_power,type="l", xaxt = "n" , ylab = "Global Active Power (kilowatts)",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
png(filename = "plot2.png", bg = "white")
plot(data$Global_active_power,type="l", xaxt = "n" , ylab = "Global Active Power (kilowatts)",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
dev.off()
png(filename = "plot1.png", bg = "white")
hist(data$Global_active_power , col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
head(data)
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_1, col = "red")
lines(data$Sub_metering_1, col = "blue")
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$metering)/2,length(data$metering)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_1, col = "red")
lines(data$Sub_metering_1, col = "blue")
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_1, col = "red")
lines(data$Sub_metering_1, col = "blue")
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_1, col = "red")
lines(data$Sub_metering_1, col = "blue")
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_2, col = "red")
lines(data$Sub_metering_3, col = "blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_1","Sub_metering_1"),lty=c(1,1),col=c("black","red","blue") )
png(filename = "plot3.png", bg = "white")
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_2, col = "red")
lines(data$Sub_metering_3, col = "blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_1","Sub_metering_1"),lty=c(1,1),col=c("black","red","blue") )
dev.off()
head(data)
par(mfrow=c(2,2))
plot(data$Global_active_power,type="l", xaxt = "n" , ylab = "Global Active Power (kilowatts)",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Voltage ,type="l", xaxt = "n" , ylab = "Voltage",xlab = "datetime", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_2, col = "red")
lines(data$Sub_metering_3, col = "blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_1","Sub_metering_1"),lty=c(1,1),col=c("black","red","blue") )
plot(data$Global_reactive_power,type="l", xaxt = "n" , ylab = "Global_reactive_power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
par(mfrow=c(2,2))
plot(data$Global_active_power,type="l", xaxt = "n" , ylab = "Global Active Power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Voltage ,type="l", xaxt = "n" , ylab = "Voltage",xlab = "datetime", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_2, col = "red")
lines(data$Sub_metering_3, col = "blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_1","Sub_metering_1"),lty=c(1,1),col=c("black","red","blue") )
plot(data$Global_reactive_power,type="l", xaxt = "n" , ylab = "Global_reactive_power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
par(mfrow=c(2,2))
plot(data$Global_active_power,type="l", xaxt = "n" , ylab = "Global Active Power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Voltage ,type="l", xaxt = "n" , ylab = "Voltage",xlab = "datetime", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_2, col = "red")
lines(data$Sub_metering_3, col = "blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_1","Sub_metering_1"),lty=c(1,1),col=c("black","red","blue"),bty = "n" )
plot(data$Global_reactive_power,type="l", xaxt = "n" , ylab = "Global_reactive_power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
png(filename = "plot4.png", bg = "white")
par(mfrow=c(2,2))
plot(data$Global_active_power,type="l", xaxt = "n" , ylab = "Global Active Power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Voltage ,type="l", xaxt = "n" , ylab = "Voltage",xlab = "datetime", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
plot(data$Sub_metering_1,type="n", xaxt = "n" , ylab = "Energy sub metering",xlab = "", main = "")
axis(1, at = c(0,length(data$Sub_metering_1)/2,length(data$Sub_metering_1)), labels = c("Thu","Fri","Sat"))
lines(data$Sub_metering_1, col = "black")
lines(data$Sub_metering_2, col = "red")
lines(data$Sub_metering_3, col = "blue")
legend("topright",legend=c("Sub_metering_1","Sub_metering_1","Sub_metering_1"),lty=c(1,1),col=c("black","red","blue"),bty = "n" )
plot(data$Global_reactive_power,type="l", xaxt = "n" , ylab = "Global_reactive_power",xlab = "", main = "")
axis(1, at = c(0,length(data$Global_active_power)/2,length(data$Global_active_power)), labels = c("Thu","Fri","Sat"))
dev.off()
q()
